apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: airflow
  name: airflow
  namespace: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      run: airflow
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: airflow
      # annotations:
      #   prometheus.io/scrape: "true"
      #   prometheus.io/port: "8080"
    spec:
      containers:
      - image: jjaniec/airflow-exporter
        name: airflow
        resources: {}
        ports:
          - containerPort: 8080
            name: airflow-http
        livenessProbe:
          httpGet:
            path: /api/experimental/test
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 5
        command:
          - bash
          - -c
          - 'airflow upgradedb; airflow users -c --username root --password toor --email root@root --role Admin --firstname root --lastname root; airflow scheduler & airflow webserver'
        # volumeMounts:
        #   - readOnly: true
        #     name: airflow-cfg
        #     mountPath: /home/airflow/airflow/airflow.cfg
        #     subPath: airflow.cfg
        envFrom:
        - configMapRef:
            name: airflow-env
        - secretRef:
            name: airflow-secrets
        volumeMounts:
          - readOnly: true
            mountPath: /home/airflow/airflow/dags
            name: airflow-dags
        #   - readOnly: false
        #     mountPath: /home/airflow/airflow/logs
        #     name: airflow-logs
      initContainers:
        - image: mysql:5.7
          name: backend-liveness-check
          command: ['sh', '-c', 'until mysqladmin ping -h $RESULT_BACKEND_ADDRESS -u root --password=toor; do echo Waiting for result backend to start; sleep 1; done;']
          env:
            - name: RESULT_BACKEND_ADDRESS
              value: "result-backend"
      volumes:
        - name: airflow-cfg
          configMap:
            name: airflow-cfg
        - name: airflow-dags
          persistentVolumeClaim:
            claimName: airflow-dags
        # - name: airflow-logs
        #   persistentVolumeClaim:
        #     claimName: airflow-logs
      serviceAccountName: airflow
